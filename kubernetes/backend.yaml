# kubernetes/backend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: krr-management-backend
  namespace: krr-management
  labels:
    app.kubernetes.io/name: krr-management
    app.kubernetes.io/component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: krr-management
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: krr-management
        app.kubernetes.io/component: backend
    spec:
      serviceAccountName: krr-management-backend
      containers:
      - name: backend
        image: krr-management/backend:latest
        ports:
        - containerPort: 3001
        env:
        - name: DATABASE_URL
          value: "postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB
        envFrom:
        - configMapRef:
            name: krr-management-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
      volumes:
      - name: uploads
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: krr-management-backend
  namespace: krr-management
  labels:
    app.kubernetes.io/name: krr-management
    app.kubernetes.io/component: backend
spec:
  ports:
  - port: 3001
    targetPort: 3001
  selector:
    app.kubernetes.io/name: krr-management
    app.kubernetes.io/component: backend